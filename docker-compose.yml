version: '3.9'

services:

  postgres:

    image: postgres:latest
    ports:
      - 5432:5432
    env_file:
      - ./env/.postgres_env
    networks:
      - employeeapp_network
    volumes:
      - postgresdata:/var/lib/postgresql/data/
    restart: unless-stopped  




  adminer:
    image: adminer
    environment:
        - ADMINER_DESIGN=pappu687
    depends_on:
        - postgres
    networks:
        - employeeapp_network
    volumes:
        - adminer:/adminer
    ports:
        - 8080:8080
    restart: on-failure

  backend:

    build:
      context: ./Backend/app/
      dockerfile: 'DockerFile'
    

    depends_on:
      - postgres 

    volumes:
        - ./Backend/app/:/app
        - static-files:/app/assets

    

    ports:
      - 8000:8000

    env_file:
      - ./env/.env

    networks:
      - employeeapp_network

    restart: always

  frontend:
    
    build:
      context: './Frontend/app/'
      dockerfile: 'DockerFile'


    environment:
      CHOKIDAR_USEPOLLING: "true" 

      
    volumes: 
        - ./Frontend/app/src:/app/src
        - ./public/assets:/app/public/assets
        - /app/node_modules  

    depends_on:
      - backend

    ports:
      - 3000:3000

    stdin_open: true
    tty: true
        
volumes:

  static-files:
      name: employee_django_static_volume
  
  postgresdata:
      name: employee_postgres_volume

  adminer:
      name: employee_adminer_volume    
    


networks:
  employeeapp_network:
      name: supernet
      external: True    
